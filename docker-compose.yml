version: "3.9"

services:

    storageserver1.test:
        build:
            context: .
            dockerfile: docker/Dockerfile-storage-server
        environment:
            - SERVER_ID=1
        volumes:
            - .:/app
        networks:
            - distributed-filesystem
        restart: always
        command: ["sh", "-c", "flask --app=storage_server run --reload --host=0.0.0.0 --port=80"]

    storageserver2.test:
        build:
            context: .
            dockerfile: docker/Dockerfile-storage-server
        environment:
            - SERVER_ID=2
        volumes:
            - .:/app
        networks:
            - distributed-filesystem
        restart: always
        command: ["sh", "-c", "flask --app=storage_server run --reload --host=0.0.0.0 --port=80"]

    storageserver3.test:
        build:
            context: .
            dockerfile: docker/Dockerfile-storage-server
        environment:
            - SERVER_ID=3
        volumes:
            - .:/app
        networks:
            - distributed-filesystem
        restart: always
        command: ["sh", "-c", "flask --app=storage_server run --reload --host=0.0.0.0 --port=80"]

    master.test:
        build:
            context: .
            dockerfile: docker/Dockerfile-master
        environment:
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_PORT=${REDIS_PORT}
            - CHUNK_SIZE=${CHUNK_SIZE}
        ports:
            - "127.0.0.1:9080:80"
        volumes:
            - .:/app
        networks:
            - distributed-filesystem
        restart: always
        command: ["sh", "-c", "flask --app=master run --reload --host=0.0.0.0 --port=80"]

    redis:
        image: redis:7.0.11-alpine3.18
        networks:
            - distributed-filesystem
        restart: always
        healthcheck:
            test: ["CMD", "redis-cli"]
            timeout: 5s
            retries: 3

networks:
    distributed-filesystem:
        driver: bridge